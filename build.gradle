import xyz.jpenilla.resourcefactory.bukkit.BukkitPluginYaml

plugins {
    id 'java-library'
    id 'maven-publish'
    id ("io.papermc.paperweight.userdev") version "1.7.2"
    id("xyz.jpenilla.run-paper") version "2.3.0" // Adds runServer and runMojangMappedServer tasks for testing
    id("xyz.jpenilla.resource-factory-bukkit-convention") version "1.1.1"
}



repositories {

    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url = 'https://maven.maxhenkel.de/repository/public' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
//    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    paperweight.paperDevBundle("${minecraft_version}-${paper_build}")
    implementation "de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}"
}

def targetJavaVersion = Integer.parseInt(java_version)
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version,group: rootProject.group]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
tasks.assemble {
    dependsOn(tasks.reobfJar)
}
tasks {
    compileJava {
        // Set the release flag. This configures what version bytecode the compiler will emit, as well as what JDK APIs are usable.
        // See https://openjdk.java.net/jeps/247 for more information.
        options.release = 21
    }

    // Only relevant when going with option 2 above
    /*
    reobfJar {
      // This is an example of how you might change the output location for reobfJar. It's recommended not to do this
      // for a variety of reasons, however it's asked frequently enough that an example of how to do it is included here.
      outputJar = layout.buildDirectory.file("libs/PaperweightTestPlugin-${project.version}.jar")
    }
     */
}
// Configure plugin.yml generation
// - name, version, and description are inherited from the Gradle project.
bukkitPluginYaml {
    main.set("me.quickscythe.shadowutils.HauntedHavoc")
    load.set(BukkitPluginYaml.PluginLoadOrder.STARTUP)
    authors.add("${author}")
    apiVersion.set("${minecraft_version}")
}
